"""Add custom bulk printing requests

Revision ID: c0298924690e
Revises: 57be7838a54f
Create Date: 2025-07-18 12:22:33.579798

"""


# revision identifiers, used by Alembic.
revision = 'c0298924690e'
down_revision = '57be7838a54f'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import residue


try:
    is_sqlite = op.get_context().dialect.name == 'sqlite'
except Exception:
    is_sqlite = False

if is_sqlite:
    op.get_context().connection.execute('PRAGMA foreign_keys=ON;')
    utcnow_server_default = "(datetime('now', 'utc'))"
else:
    utcnow_server_default = "timezone('utc', current_timestamp)"

def sqlite_column_reflect_listener(inspector, table, column_info):
    """Adds parenthesis around SQLite datetime defaults for utcnow."""
    if column_info['default'] == "datetime('now', 'utc')":
        column_info['default'] = utcnow_server_default

sqlite_reflect_kwargs = {
    'listeners': [('column_reflect', sqlite_column_reflect_listener)]
}

# ===========================================================================
# HOWTO: Handle alter statements in SQLite
#
# def upgrade():
#     if is_sqlite:
#         with op.batch_alter_table('table_name', reflect_kwargs=sqlite_reflect_kwargs) as batch_op:
#             batch_op.alter_column('column_name', type_=sa.Unicode(), server_default='', nullable=False)
#     else:
#         op.alter_column('table_name', 'column_name', type_=sa.Unicode(), server_default='', nullable=False)
#
# ===========================================================================


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bulk_printing_request',
    sa.Column('id', residue.UUID(), nullable=False),
    sa.Column('created', residue.UTCDateTime(), server_default=sa.text("timezone('utc', current_timestamp)"), nullable=False),
    sa.Column('last_updated', residue.UTCDateTime(), server_default=sa.text("timezone('utc', current_timestamp)"), nullable=False),
    sa.Column('external_id', postgresql.JSONB(astext_type=sa.Text()), server_default='{}', nullable=False),
    sa.Column('last_synced', postgresql.JSONB(astext_type=sa.Text()), server_default='{}', nullable=False),
    sa.Column('department_id', residue.UUID(), nullable=False),
    sa.Column('link', sa.Unicode(), server_default='', nullable=False),
    sa.Column('copies', sa.Integer(), nullable=False),
    sa.Column('print_orientation', sa.Integer(), server_default='150154838', nullable=False),
    sa.Column('cut_orientation', sa.Integer(), server_default='96787915', nullable=False),
    sa.Column('color', sa.Integer(), server_default='86258575', nullable=False),
    sa.Column('paper_type', sa.Integer(), server_default='110117824', nullable=False),
    sa.Column('paper_type_text', sa.Unicode(), server_default='', nullable=False),
    sa.Column('size', sa.Integer(), server_default='110117824', nullable=False),
    sa.Column('size_text', sa.Unicode(), server_default='', nullable=False),
    sa.Column('double_sided', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('stapled', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('notes', sa.Unicode(), server_default='', nullable=False),
    sa.Column('required', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('link_is_shared', sa.Boolean(), server_default='False', nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['department.id'], name=op.f('fk_bulk_printing_request_department_id_department')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_bulk_printing_request'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('bulk_printing_request')
    # ### end Alembic commands ###
